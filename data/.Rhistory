23, 26, 29, 29, 50, 45, 61, 61, 58, 32, 27, 49, 27, 45, 64, 28,
45, 47, 51, 44, 35, 26, 60, 44, 42, 50, 42, 51, 57, 23, 26, 29,
29, 50, 45, 61, 61, 58, 32, 27, 49, 27, 45, 64, 28, 45, 47, 51,
44, 35, 26, 60, 44, 42, 50, 42, 51, 57, 23, 26, 29, 29, 50, 45,
61, 61, 58, 32, 27, 49, 27, 45, 64, 28),
BMI = c(29.7506923675537,
28.8, 28.8385677337646, 41.48, 27.7186069488525, 29.54, 38.06,
35.8453826904297, 35.57, 31.77, 31.75, 32.78, 30.5336246490479,
29.1074104309082, 36.4690246582031, 31.7769088745117, 31.5393238067627,
31.5596752166748, 27.593786239624, 30.8192825317383, 27.0799140930176,
31.481481552124, 29.0328979492188, 24.52, 29.4029197692871, 35.6112785339355,
28.2401905059814, 28.8979587554932, 29.7506923675537, 28.8, 28.8385677337646,
41.48, 27.7186069488525, 29.54, 38.06, 35.8453826904297, 31.77,
31.75, 32.78, 30.5336246490479, 29.1074104309082, 36.4690246582031,
31.7769088745117, 31.5393238067627, 31.5596752166748, 27.593786239624,
30.8192825317383, 27.0799140930176, 31.481481552124, 29.0328979492188,
24.52, 29.4029197692871, 23.0956573486328, 35.6112785339355,
28.2401905059814, 28.8979587554932, 29.7506923675537, 28.8, 28.8385677337646,
41.48, 27.7186069488525, 29.54, 38.06, 35.8453826904297, 35.57,
31.77, 31.75, 32.78, 30.5336246490479, 29.1074104309082, 36.4690246582031,
31.7769088745117, 31.5393238067627, 31.5596752166748, 27.593786239624,
30.8192825317383, 27.0799140930176, 31.481481552124, 29.0328979492188,
24.52, 29.4029197692871, 23.0956573486328, 35.6112785339355,
28.2401905059814, 28.8979587554932, 29.7506923675537, 28.8, 28.8385677337646,
41.48, 27.7186069488525, 29.54, 38.06, 35.8453826904297, 35.57,
31.77, 31.75, 32.78, 30.5336246490479, 29.1074104309082, 36.4690246582031,
31.7769088745117, 31.5393238067627, 31.5596752166748, 27.593786239624,
30.8192825317383, 27.0799140930176, 31.481481552124, 29.0328979492188,
24.52, 29.4029197692871, 23.0956573486328, 35.6112785339355,
28.2401905059814, 28.8979587554932, 29.7506923675537, 28.8, 28.8385677337646,
41.48, 27.7186069488525, 29.54, 38.06, 35.8453826904297, 35.57,
31.77, 31.75, 32.78, 30.5336246490479, 29.1074104309082, 36.4690246582031,
31.7769088745117, 31.5393238067627, 31.5596752166748, 27.593786239624,
30.8192825317383, 27.0799140930176, 31.481481552124, 29.0328979492188,
24.52, 29.4029197692871, 23.0956573486328, 35.6112785339355,
28.2401905059814, 28.8979587554932, 29.7506923675537, 28.8, 28.8385677337646,
41.48, 27.7186069488525, 29.54, 38.06, 35.8453826904297, 35.57,
31.77, 31.75, 32.78, 30.5336246490479, 29.1074104309082, 36.4690246582031,
31.7769088745117, 31.5393238067627, 31.5596752166748, 27.593786239624,
30.8192825317383, 27.0799140930176, 31.481481552124, 29.0328979492188,
24.52, 29.4029197692871, 23.0956573486328, 35.6112785339355,
28.2401905059814, 28.8979587554932)), .Names = c("ID", "sex",
"ROI", "value", "Alter", "BMI"), row.names = c(NA, -172L), class = c("tbl_df","tbl", "data.frame"))
mod <- lmer(value~Alter+ROI+BMI+(1|ID),data=mydat,REML=F)
mod
library(lmerTest)
mod <- lmer(value~Alter+ROI+BMI+(1|ID),data=mydat,REML=F)
summary(mod)
sessionInfo()
getwd()
getwd() + '/001/'
getwd() + '001/'
paste0(getwd(), '/001')
[1 3 8 10; 1 4 7 10; 1 5 6 10; 2 4 7 9; 2 5 6 9; 3 5 6 8]
wd <- paste0(getwd(), '/001')
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
filenames
library(data.table)
library(ggplot2)
window_size <- 0.1
slider <- function(x, y, window_size = 0.1) {
out <- rep(NA, length(y))
upper <- x + (window_size/2)
lower <- x - (window_size/2)
for (nn in seq(1, length(y))) {
out[nn] <- mean(y[x <= upper[nn] & x >= lower[nn]], na.rm = TRUE)
}
out
}
wd <- paste0(getwd(), '/001')
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
dat <- lapply(filenames, read.csv, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
dat <- dat[first_image != second_image]
dat[, 'type' := ifelse(
(first_image == 2 & second_image == 4) |
(first_image == 4 & second_image == 2) |
(first_image == 7 & second_image == 9) |
(first_image == 9 & second_image == 7), 'same_hand',
ifelse(
(first_image == 2 & second_image == 8) |
(first_image == 8 & second_image == 2) |
(abs(first_image - second_image) == 3), 'homologous', 'not')
)]
dat[, 'original_digit' := ifelse(first_image ==2 | first_image == 9, 'ring', 'pointer')]
dat[, 'same_hand' := type == 'same_hand']
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('type', 'original_digit')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = type)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1), minor_breaks = seq(0, 0.5, 0.05)) +
scale_y_continuous(breaks = seq(0, 1, 0.2)) + facet_wrap(~original_digit)
library(data.table)
library(ggplot2)
window_size <- 0.1
slider <- function(x, y, window_size = 0.1) {
out <- rep(NA, length(y))
upper <- x + (window_size/2)
lower <- x - (window_size/2)
for (nn in seq(1, length(y))) {
out[nn] <- mean(y[x <= upper[nn] & x >= lower[nn]], na.rm = TRUE)
}
out
}
wd <- paste0(getwd(), '/001')
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
dat <- lapply(filenames, read.csv, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
dat <- dat[first_image != second_image]
dat[, 'type' := ifelse(
(first_image == 2 & second_image == 4) |
(first_image == 4 & second_image == 2) |
(first_image == 7 & second_image == 9) |
(first_image == 9 & second_image == 7), 'same_hand',
ifelse(
(first_image == 2 & second_image == 9) |
(first_image == 9 & second_image == 2) |
(abs(first_image - second_image) == 3), 'homologous', 'not')
)]
dat[, 'original_digit' := ifelse(first_image ==2 | first_image == 9, 'ring', 'pointer')]
dat[, 'same_hand' := type == 'same_hand']
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('type', 'original_digit')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = type)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1), minor_breaks = seq(0, 0.5, 0.05)) +
scale_y_continuous(breaks = seq(0, 1, 0.2)) + facet_wrap(~original_digit)
library(data.table)
library(ggplot2)
window_size <- 0.1
slider <- function(x, y, window_size = 0.1) {
out <- rep(NA, length(y))
upper <- x + (window_size/2)
lower <- x - (window_size/2)
for (nn in seq(1, length(y))) {
out[nn] <- mean(y[x <= upper[nn] & x >= lower[nn]], na.rm = TRUE)
}
out
}
wd <- paste0(getwd(), '/001')
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
dat <- lapply(filenames, fread, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
head(dat)
dat <- dat[first_image != second_image]
dat[, 'type' := ifelse(
(first_image == 2 & second_image == 4) |
(first_image == 4 & second_image == 2) |
(first_image == 7 & second_image == 9) |
(first_image == 9 & second_image == 7), 'same_hand',
ifelse(
(first_image == 2 & second_image == 9) |
(first_image == 9 & second_image == 2) |
(abs(first_image - second_image) == 3), 'homologous', 'not')
)]
dat[, 'original_digit' := ifelse(first_image ==2 | first_image == 9, 'ring', 'pointer')]
dat[, 'original_digit' := ifelse(first_image ==2 | first_image == 9, 'ring', 'pointer')]
dat[, 'same_hand' := type == 'same_hand']
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('type', 'original_digit')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = type)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1), minor_breaks = seq(0, 0.5, 0.05)) +
scale_y_continuous(breaks = seq(0, 1, 0.2)) + facet_wrap(~original_digit)
dat[, 'original_digit' := ifelse(first_image ==2 | first_image == 9, 'ring', 'pointer')]
dat[, 'same_hand' := type == 'same_hand']
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('type', 'original_digit')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = type)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1), minor_breaks = seq(0, 0.5, 0.05), limits = c(0, .5)) +
scale_y_continuous(breaks = seq(0, 1, 0.2)) + facet_wrap(~original_digit)
window_size <- 0.05
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('type', 'original_digit')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = type)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1),
minor_breaks = seq(0, 0.5, 0.05), limits = c(0, .5)) +
scale_y_continuous(breaks = seq(0, 1, 0.2)) + facet_wrap(~original_digit)
remake::make('clean')
?make
wd <- getwd()
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
filenames
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
filenames
filenames <- filenames[!grepl('000')]
filenames <- filenames[!grepl(filenames, '000')]
filenames
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
filenames <- filenames[!grepl(filenames, pattern = '000')]
filenames
dat <- lapply(filenames, fread, header = TRUE)
dat <- rbindlist(dat)
dat
mod
5 %% 0
5 %% 1
dat[, 'hand1' := first_image % 5]
dat[, 'hand1' := first_image %% 5]
dat
dat[, 'hand1' := first_image %% 10]
dat
dat[, 'hand1' := ifelse(first_image > 5, 'right', 'left')]
dat
dat[, 'hand1' := ifelse(first_image > 5, 'right', 'left')]
dt
dat
dat <- dat[!is.nan(first_press)]
dat
dat <- lapply(filenames, fread, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
dat <- dat[first_image != second_image]
dat <- dat[!is.nan(first_press)]
dat[, 'hand1' := ifelse(first_image > 5, 'right', 'left')]
dat
dat[, 'hand2' := ifelse(first_image > 5, 'right', 'left')]
dat
dat[, 'hand2' := ifelse(second_image > 5, 'right', 'left')]
dat
10 - c(6, 7, 8, 9, 10)
10 - c(6, 7, 8, 9, 10) - 5
ref
rev
rev(c(6,7,8,9,10))
rev(abs(c(6,7,8,9,10)-9))
6:10 - 9
1:5 % 5
1:5 %% 5
6:10 %% 5
fings <- c('pinky', 'ring', 'middle', 'index', 'thumb')
rev(fings)
fings <- c('pinky', 'ring', 'middle', 'index', 'thumb')
fingers <- data.frame(index = 1:10, fingers = c(fings, rev(fings)))
fingers
dat[, 'finger1' := fingers[fingers$index == first_image]]
dat[, 'finger1' := fingers[fingers$index == dat$first_image]]
fingers[, 1]
fingers[1, ]
fingers[1, 'fingers']
dat[, 'finger1' := fingers[fingers$index == dat$first_image,2]]
dat
dat[, 'finger1' := fingers[fingers$index == first_image,2]]
dat
dat$finger1
fings <- c('pinky', 'ring', 'middle', 'index', 'thumb')
fingers <- data.frame(first_image = 1:10, fingers = c(fings, rev(fings)))
merge(dat, fingers, by = 'first_image')
merge(dat, fingers, by = 'first_image')[1:20]
merge(dat, fingers, by = 'first_image', sort = FALSE)
names(fingers)
names_fingers <- c('second_image', 'finger2')
dat <- lapply(filenames, fread, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
dat <- dat[first_image != second_image]
dat <- dat[!is.nan(first_press)]
dat[, 'hand1' := ifelse(first_image > 5, 'right', 'left')]
dat[, 'hand2' := ifelse(second_image > 5, 'right', 'left')]
# can't think
fings <- c('pinky', 'ring', 'middle', 'index', 'thumb')
fingers <- data.frame(first_image = 1:10, finger1 = c(fings, rev(fings)))
dat <- merge(dat, fingers, by = 'first_image')
names_fingers <- c('second_image', 'finger2')
dat <- merge(dat, fingers, by = 'second_image')
dat <- lapply(filenames, fread, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
dat <- dat[first_image != second_image]
dat <- dat[!is.nan(first_press)]
dat[, 'hand1' := ifelse(first_image > 5, 'right', 'left')]
dat[, 'hand2' := ifelse(second_image > 5, 'right', 'left')]
# can't think
fings <- c('pinky', 'ring', 'middle', 'index', 'thumb')
fingers <- data.frame(first_image = 1:10, finger1 = c(fings, rev(fings)))
dat <- merge(dat, fingers, by = 'first_image', sort = FALSE)
dat
names(fingers) <- c('second_image', 'finger2')
fingers
dat <- merge(dat, fingers, by = 'second_image')
dat
dat <- lapply(filenames, fread, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
dat <- dat[first_image != second_image]
dat <- dat[!is.nan(first_press)]
dat[, 'hand1' := ifelse(first_image > 5, 'right', 'left')]
dat[, 'hand2' := ifelse(second_image > 5, 'right', 'left')]
# can't think
fings <- c('pinky', 'ring', 'middle', 'index', 'thumb')
fingers <- data.frame(first_image = 1:10, finger1 = c(fings, rev(fings)))
dat <- merge(dat, fingers, by = 'first_image', sort = FALSE)
names(fingers) <- c('second_image', 'finger2')
dat <- merge(dat, fingers, by = 'second_image', sort = FALSE)
dat
dat[, 'label' := ifelse(hand1 == hand2, 'same_hand',
ifelse(finger1 == finger2, 'homologous', 'heterologous'))]
dat
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('label')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = label)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1),
minor_breaks = seq(0, 0.5, 0.05), limits = c(0, .5)) +
scale_y_continuous(breaks = seq(0, 1, 0.2))
window_size <- .1
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = label)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1),
minor_breaks = seq(0, 0.5, 0.05), limits = c(0, .5)) +
scale_y_continuous(breaks = seq(0, 1, 0.2))
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('label')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = label)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1),
minor_breaks = seq(0, 0.5, 0.05), limits = c(0, .5)) +
scale_y_continuous(breaks = seq(0, 1, 0.2))
rnorm(1000, 0.25, 0.1)
hist(rnorm(1000, 0.25, 0.1))
hist(rnorm(1000, 0.15, 0.1) + rexp(1000, 1/.1))
hist(rnorm(1000, 0.15, 0.1) + rexp(1000, 1/.1), breaks = 30)
hist(rnorm(1000, 0.15, 0.1) + rexp(1000, 1/.5), breaks = 30)
hist(rnorm(1000, 0.15, 0.1) + rexp(1000, 1/.2), breaks = 30)
hist(rnorm(1000, 0.1, 0.1) + rexp(1000, 1/.15), breaks = 30)
hist(rnorm(1000, 0.1, 0.1) + rexp(1000, 1/.15), breaks = 30)
hist(rnorm(1000, 0.1, 0.1) + rexp(1000, 1/.15), breaks = 30)
library(truncnorm)
install.packages('truncnorm')
library(truncnorm)
hist(rtruncnorm(1000, 0, Inf, 0.1, 0.1) + rexp(1000, 1/.15), breaks = 30)
library(data.table)
library(ggplot2)
window_size <- 0.05
slider <- function(x, y, window_size = 0.1) {
out <- rep(NA, length(y))
upper <- x + (window_size/2)
lower <- x - (window_size/2)
for (nn in seq(1, length(y))) {
out[nn] <- mean(y[x <= upper[nn] & x >= lower[nn]], na.rm = TRUE)
}
out
}
wd <- paste0(getwd(), '/bias_0')
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
filenames <- filenames[!grepl(filenames, pattern = '000')]
dat <- lapply(filenames, fread, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
dat <- dat[first_image != second_image]
dat <- dat[!is.nan(first_press)]
dat[, 'hand1' := ifelse(first_image > 5, 'right', 'left')]
dat[, 'hand2' := ifelse(second_image > 5, 'right', 'left')]
# can't think
fings <- c('pinky', 'ring', 'middle', 'index', 'thumb')
fingers <- data.frame(first_image = 1:10, finger1 = c(fings, rev(fings)))
dat <- merge(dat, fingers, by = 'first_image', sort = FALSE)
names(fingers) <- c('second_image', 'finger2')
dat <- merge(dat, fingers, by = 'second_image', sort = FALSE)
dat[, 'label' := ifelse(hand1 == hand2, 'same_hand',
ifelse(finger1 == finger2, 'homologous', 'heterologous'))]
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('label')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = label)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1),
minor_breaks = seq(0, 0.5, 0.05), limits = c(0, .5)) +
scale_y_continuous(breaks = seq(0, 1, 0.2))
window_size <- 0.1
slider <- function(x, y, window_size = 0.1) {
out <- rep(NA, length(y))
upper <- x + (window_size/2)
lower <- x - (window_size/2)
for (nn in seq(1, length(y))) {
out[nn] <- mean(y[x <= upper[nn] & x >= lower[nn]], na.rm = TRUE)
}
out
}
wd <- paste0(getwd(), '/bias_0')
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
filenames <- filenames[!grepl(filenames, pattern = '000')]
dat <- lapply(filenames, fread, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
dat <- dat[first_image != second_image]
dat <- dat[!is.nan(first_press)]
dat[, 'hand1' := ifelse(first_image > 5, 'right', 'left')]
dat[, 'hand2' := ifelse(second_image > 5, 'right', 'left')]
# can't think
fings <- c('pinky', 'ring', 'middle', 'index', 'thumb')
fingers <- data.frame(first_image = 1:10, finger1 = c(fings, rev(fings)))
dat <- merge(dat, fingers, by = 'first_image', sort = FALSE)
names(fingers) <- c('second_image', 'finger2')
dat <- merge(dat, fingers, by = 'second_image', sort = FALSE)
dat[, 'label' := ifelse(hand1 == hand2, 'same_hand',
ifelse(finger1 == finger2, 'homologous', 'heterologous'))]
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('label')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = label)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1),
minor_breaks = seq(0, 0.5, 0.05), limits = c(0, .5)) +
scale_y_continuous(breaks = seq(0, 1, 0.2))
x = arima.sim(list(order = c(1,1,0), ar = 0.7), n = 200) #Generates random data from ARIMA(1,1,0).  This will generate a new data set for each call.
z = ts.intersect(x, lag(x,-3), lag(x,-4)) #Creates a matrix z with columns, xt, xt-3, and xt-4
y = 15+0.8*z[,2]+1.5*z[,3]  #Creates y from lags 3 and 4 of randomly generated x
ccf(z[,1],y,na.action = na.omit)
plot(x,y)
ar1model = arima(x, order = c(1,1,0))
ar1model
set.seed(66)      # so you can reproduce these results
x = arima.sim(list(order=c(1,0,0), ar=.9), n=100) + 50
mean(x)
[1] 50.60668   # the sample mean is close
arima(x, order = c(1, 0, 0))
library(nlme)
?gls
?corAR1
mm <- gls(x ~ 1, corr = corAR1())
mm
library(data.table)
library(ggplot2)
window_size <- 0.1
slider <- function(x, y, window_size = 0.1) {
out <- rep(NA, length(y))
upper <- x + (window_size/2)
lower <- x - (window_size/2)
for (nn in seq(1, length(y))) {
out[nn] <- mean(y[x <= upper[nn] & x >= lower[nn]], na.rm = TRUE)
}
out
}
wd <- paste0(getwd(), '/jcc')
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
filenames <- filenames[!grepl(filenames, pattern = '000')]
dat <- lapply(filenames, fread, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
dat <- dat[first_image != second_image]
dat <- dat[!is.nan(first_press)]
dat[, 'hand1' := ifelse(first_image > 5, 'right', 'left')]
dat[, 'hand2' := ifelse(second_image > 5, 'right', 'left')]
# can't think
fings <- c('pinky', 'ring', 'middle', 'index', 'thumb')
fingers <- data.frame(first_image = 1:10, finger1 = c(fings, rev(fings)))
dat <- merge(dat, fingers, by = 'first_image', sort = FALSE)
names(fingers) <- c('second_image', 'finger2')
dat <- merge(dat, fingers, by = 'second_image', sort = FALSE)
dat[, 'label' := ifelse(hand1 == hand2, 'same_hand',
ifelse(finger1 == finger2, 'homologous', 'heterologous'))]
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('label')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = label)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1),
minor_breaks = seq(0, 0.5, 0.05), limits = c(0, .5)) +
scale_y_continuous(breaks = seq(0, 1, 0.2))
library(data.table)
library(ggplot2)
window_size <- 0.1
slider <- function(x, y, window_size = 0.1) {
out <- rep(NA, length(y))
upper <- x + (window_size/2)
lower <- x - (window_size/2)
for (nn in seq(1, length(y))) {
out[nn] <- mean(y[x <= upper[nn] & x >= lower[nn]], na.rm = TRUE)
}
out
}
wd <- paste0(getwd(), '/bias_0')
filenames <- list.files(path = wd, pattern = '*.csv$', recursive = TRUE, full.names= TRUE)
filenames <- filenames[!grepl(filenames, pattern = '000')]
dat <- lapply(filenames, fread, header = TRUE)
dat <- rbindlist(dat)
dat <- dat[real_prep_time > 0]
dat <- dat[first_image != second_image]
dat <- dat[!is.nan(first_press)]
dat[, 'hand1' := ifelse(first_image > 5, 'right', 'left')]
dat[, 'hand2' := ifelse(second_image > 5, 'right', 'left')]
# can't think
fings <- c('pinky', 'ring', 'middle', 'index', 'thumb')
fingers <- data.frame(first_image = 1:10, finger1 = c(fings, rev(fings)))
dat <- merge(dat, fingers, by = 'first_image', sort = FALSE)
names(fingers) <- c('second_image', 'finger2')
dat <- merge(dat, fingers, by = 'second_image', sort = FALSE)
dat[, 'label' := ifelse(hand1 == hand2, 'same_hand',
ifelse(finger1 == finger2, 'homologous', 'heterologous'))]
dat[, 'slide_correct' := slider(real_prep_time, correct, window_size), by = c('label')]
ggplot(dat, aes(x = real_prep_time,y = slide_correct, colour = label)) +
geom_line(size = 1.2) +
geom_point(aes(y = ifelse(correct, 1.1, -0.1)), pch = '|', size = 4) +
labs(x = 'Preparation Time', y = 'Prop(Correct)') +
scale_x_continuous(breaks = seq(0, 0.5, 0.1),
minor_breaks = seq(0, 0.5, 0.05), limits = c(0, .5)) +
scale_y_continuous(breaks = seq(0, 1, 0.2))
